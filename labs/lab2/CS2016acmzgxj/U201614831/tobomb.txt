
bomb：     文件格式 elf32-i386


Disassembly of section .init:

080486f4 <_init>:
 80486f4:	53                   	push   %ebx
 80486f5:	83 ec 08             	sub    $0x8,%esp
 80486f8:	e8 13 02 00 00       	call   8048910 <__x86.get_pc_thunk.bx>
 80486fd:	81 c3 03 39 00 00    	add    $0x3903,%ebx
 8048703:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048709:	85 c0                	test   %eax,%eax
 804870b:	74 05                	je     8048712 <_init+0x1e>
 804870d:	e8 be 01 00 00       	call   80488d0 <__sprintf_chk@plt+0x10>
 8048712:	83 c4 08             	add    $0x8,%esp
 8048715:	5b                   	pop    %ebx
 8048716:	c3                   	ret    

Disassembly of section .plt:

08048720 <read@plt-0x10>:
 8048720:	ff 35 04 c0 04 08    	pushl  0x804c004
 8048726:	ff 25 08 c0 04 08    	jmp    *0x804c008
 804872c:	00 00                	add    %al,(%eax)
	...

08048730 <read@plt>:
 8048730:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 8048736:	68 00 00 00 00       	push   $0x0
 804873b:	e9 e0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048740 <fflush@plt>:
 8048740:	ff 25 10 c0 04 08    	jmp    *0x804c010
 8048746:	68 08 00 00 00       	push   $0x8
 804874b:	e9 d0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048750 <fgets@plt>:
 8048750:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8048756:	68 10 00 00 00       	push   $0x10
 804875b:	e9 c0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048760 <signal@plt>:
 8048760:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8048766:	68 18 00 00 00       	push   $0x18
 804876b:	e9 b0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048770 <sleep@plt>:
 8048770:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 8048776:	68 20 00 00 00       	push   $0x20
 804877b:	e9 a0 ff ff ff       	jmp    8048720 <_init+0x2c>

08048780 <alarm@plt>:
 8048780:	ff 25 20 c0 04 08    	jmp    *0x804c020
 8048786:	68 28 00 00 00       	push   $0x28
 804878b:	e9 90 ff ff ff       	jmp    8048720 <_init+0x2c>

08048790 <__stack_chk_fail@plt>:
 8048790:	ff 25 24 c0 04 08    	jmp    *0x804c024
 8048796:	68 30 00 00 00       	push   $0x30
 804879b:	e9 80 ff ff ff       	jmp    8048720 <_init+0x2c>

080487a0 <strcpy@plt>:
 80487a0:	ff 25 28 c0 04 08    	jmp    *0x804c028
 80487a6:	68 38 00 00 00       	push   $0x38
 80487ab:	e9 70 ff ff ff       	jmp    8048720 <_init+0x2c>

080487b0 <getenv@plt>:
 80487b0:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 80487b6:	68 40 00 00 00       	push   $0x40
 80487bb:	e9 60 ff ff ff       	jmp    8048720 <_init+0x2c>

080487c0 <puts@plt>:
 80487c0:	ff 25 30 c0 04 08    	jmp    *0x804c030
 80487c6:	68 48 00 00 00       	push   $0x48
 80487cb:	e9 50 ff ff ff       	jmp    8048720 <_init+0x2c>

080487d0 <__memmove_chk@plt>:
 80487d0:	ff 25 34 c0 04 08    	jmp    *0x804c034
 80487d6:	68 50 00 00 00       	push   $0x50
 80487db:	e9 40 ff ff ff       	jmp    8048720 <_init+0x2c>

080487e0 <exit@plt>:
 80487e0:	ff 25 38 c0 04 08    	jmp    *0x804c038
 80487e6:	68 58 00 00 00       	push   $0x58
 80487eb:	e9 30 ff ff ff       	jmp    8048720 <_init+0x2c>

080487f0 <__libc_start_main@plt>:
 80487f0:	ff 25 3c c0 04 08    	jmp    *0x804c03c
 80487f6:	68 60 00 00 00       	push   $0x60
 80487fb:	e9 20 ff ff ff       	jmp    8048720 <_init+0x2c>

08048800 <write@plt>:
 8048800:	ff 25 40 c0 04 08    	jmp    *0x804c040
 8048806:	68 68 00 00 00       	push   $0x68
 804880b:	e9 10 ff ff ff       	jmp    8048720 <_init+0x2c>

08048810 <__isoc99_sscanf@plt>:
 8048810:	ff 25 44 c0 04 08    	jmp    *0x804c044
 8048816:	68 70 00 00 00       	push   $0x70
 804881b:	e9 00 ff ff ff       	jmp    8048720 <_init+0x2c>

08048820 <fopen@plt>:
 8048820:	ff 25 48 c0 04 08    	jmp    *0x804c048
 8048826:	68 78 00 00 00       	push   $0x78
 804882b:	e9 f0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048830 <__errno_location@plt>:
 8048830:	ff 25 4c c0 04 08    	jmp    *0x804c04c
 8048836:	68 80 00 00 00       	push   $0x80
 804883b:	e9 e0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048840 <__printf_chk@plt>:
 8048840:	ff 25 50 c0 04 08    	jmp    *0x804c050
 8048846:	68 88 00 00 00       	push   $0x88
 804884b:	e9 d0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048850 <socket@plt>:
 8048850:	ff 25 54 c0 04 08    	jmp    *0x804c054
 8048856:	68 90 00 00 00       	push   $0x90
 804885b:	e9 c0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048860 <__fprintf_chk@plt>:
 8048860:	ff 25 58 c0 04 08    	jmp    *0x804c058
 8048866:	68 98 00 00 00       	push   $0x98
 804886b:	e9 b0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048870 <gethostbyname@plt>:
 8048870:	ff 25 5c c0 04 08    	jmp    *0x804c05c
 8048876:	68 a0 00 00 00       	push   $0xa0
 804887b:	e9 a0 fe ff ff       	jmp    8048720 <_init+0x2c>

08048880 <strtol@plt>:
 8048880:	ff 25 60 c0 04 08    	jmp    *0x804c060
 8048886:	68 a8 00 00 00       	push   $0xa8
 804888b:	e9 90 fe ff ff       	jmp    8048720 <_init+0x2c>

08048890 <connect@plt>:
 8048890:	ff 25 64 c0 04 08    	jmp    *0x804c064
 8048896:	68 b0 00 00 00       	push   $0xb0
 804889b:	e9 80 fe ff ff       	jmp    8048720 <_init+0x2c>

080488a0 <close@plt>:
 80488a0:	ff 25 68 c0 04 08    	jmp    *0x804c068
 80488a6:	68 b8 00 00 00       	push   $0xb8
 80488ab:	e9 70 fe ff ff       	jmp    8048720 <_init+0x2c>

080488b0 <__ctype_b_loc@plt>:
 80488b0:	ff 25 6c c0 04 08    	jmp    *0x804c06c
 80488b6:	68 c0 00 00 00       	push   $0xc0
 80488bb:	e9 60 fe ff ff       	jmp    8048720 <_init+0x2c>

080488c0 <__sprintf_chk@plt>:
 80488c0:	ff 25 70 c0 04 08    	jmp    *0x804c070
 80488c6:	68 c8 00 00 00       	push   $0xc8
 80488cb:	e9 50 fe ff ff       	jmp    8048720 <_init+0x2c>

Disassembly of section .plt.got:

080488d0 <.plt.got>:
 80488d0:	ff 25 fc bf 04 08    	jmp    *0x804bffc
 80488d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080488e0 <_start>:
 80488e0:	31 ed                	xor    %ebp,%ebp
 80488e2:	5e                   	pop    %esi
 80488e3:	89 e1                	mov    %esp,%ecx
 80488e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80488e8:	50                   	push   %eax
 80488e9:	54                   	push   %esp
 80488ea:	52                   	push   %edx
 80488eb:	68 70 9e 04 08       	push   $0x8049e70
 80488f0:	68 10 9e 04 08       	push   $0x8049e10
 80488f5:	51                   	push   %ecx
 80488f6:	56                   	push   %esi
 80488f7:	68 db 89 04 08       	push   $0x80489db
 80488fc:	e8 ef fe ff ff       	call   80487f0 <__libc_start_main@plt>
 8048901:	f4                   	hlt    
 8048902:	66 90                	xchg   %ax,%ax
 8048904:	66 90                	xchg   %ax,%ax
 8048906:	66 90                	xchg   %ax,%ax
 8048908:	66 90                	xchg   %ax,%ax
 804890a:	66 90                	xchg   %ax,%ax
 804890c:	66 90                	xchg   %ax,%ax
 804890e:	66 90                	xchg   %ax,%ax

08048910 <__x86.get_pc_thunk.bx>:
 8048910:	8b 1c 24             	mov    (%esp),%ebx
 8048913:	c3                   	ret    
 8048914:	66 90                	xchg   %ax,%ax
 8048916:	66 90                	xchg   %ax,%ax
 8048918:	66 90                	xchg   %ax,%ax
 804891a:	66 90                	xchg   %ax,%ax
 804891c:	66 90                	xchg   %ax,%ax
 804891e:	66 90                	xchg   %ax,%ax

08048920 <deregister_tm_clones>:
 8048920:	b8 a3 c3 04 08       	mov    $0x804c3a3,%eax
 8048925:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804892a:	83 f8 06             	cmp    $0x6,%eax
 804892d:	76 1a                	jbe    8048949 <deregister_tm_clones+0x29>
 804892f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048934:	85 c0                	test   %eax,%eax
 8048936:	74 11                	je     8048949 <deregister_tm_clones+0x29>
 8048938:	55                   	push   %ebp
 8048939:	89 e5                	mov    %esp,%ebp
 804893b:	83 ec 14             	sub    $0x14,%esp
 804893e:	68 a0 c3 04 08       	push   $0x804c3a0
 8048943:	ff d0                	call   *%eax
 8048945:	83 c4 10             	add    $0x10,%esp
 8048948:	c9                   	leave  
 8048949:	f3 c3                	repz ret 
 804894b:	90                   	nop
 804894c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048950 <register_tm_clones>:
 8048950:	b8 a0 c3 04 08       	mov    $0x804c3a0,%eax
 8048955:	2d a0 c3 04 08       	sub    $0x804c3a0,%eax
 804895a:	c1 f8 02             	sar    $0x2,%eax
 804895d:	89 c2                	mov    %eax,%edx
 804895f:	c1 ea 1f             	shr    $0x1f,%edx
 8048962:	01 d0                	add    %edx,%eax
 8048964:	d1 f8                	sar    %eax
 8048966:	74 1b                	je     8048983 <register_tm_clones+0x33>
 8048968:	ba 00 00 00 00       	mov    $0x0,%edx
 804896d:	85 d2                	test   %edx,%edx
 804896f:	74 12                	je     8048983 <register_tm_clones+0x33>
 8048971:	55                   	push   %ebp
 8048972:	89 e5                	mov    %esp,%ebp
 8048974:	83 ec 10             	sub    $0x10,%esp
 8048977:	50                   	push   %eax
 8048978:	68 a0 c3 04 08       	push   $0x804c3a0
 804897d:	ff d2                	call   *%edx
 804897f:	83 c4 10             	add    $0x10,%esp
 8048982:	c9                   	leave  
 8048983:	f3 c3                	repz ret 
 8048985:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048990 <__do_global_dtors_aux>:
 8048990:	80 3d c8 c3 04 08 00 	cmpb   $0x0,0x804c3c8
 8048997:	75 13                	jne    80489ac <__do_global_dtors_aux+0x1c>
 8048999:	55                   	push   %ebp
 804899a:	89 e5                	mov    %esp,%ebp
 804899c:	83 ec 08             	sub    $0x8,%esp
 804899f:	e8 7c ff ff ff       	call   8048920 <deregister_tm_clones>
 80489a4:	c6 05 c8 c3 04 08 01 	movb   $0x1,0x804c3c8
 80489ab:	c9                   	leave  
 80489ac:	f3 c3                	repz ret 
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <frame_dummy>:
 80489b0:	b8 10 bf 04 08       	mov    $0x804bf10,%eax
 80489b5:	8b 10                	mov    (%eax),%edx
 80489b7:	85 d2                	test   %edx,%edx
 80489b9:	75 05                	jne    80489c0 <frame_dummy+0x10>
 80489bb:	eb 93                	jmp    8048950 <register_tm_clones>
 80489bd:	8d 76 00             	lea    0x0(%esi),%esi
 80489c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80489c5:	85 d2                	test   %edx,%edx
 80489c7:	74 f2                	je     80489bb <frame_dummy+0xb>
 80489c9:	55                   	push   %ebp
 80489ca:	89 e5                	mov    %esp,%ebp
 80489cc:	83 ec 14             	sub    $0x14,%esp
 80489cf:	50                   	push   %eax
 80489d0:	ff d2                	call   *%edx
 80489d2:	83 c4 10             	add    $0x10,%esp
 80489d5:	c9                   	leave  
 80489d6:	e9 75 ff ff ff       	jmp    8048950 <register_tm_clones>

080489db <main>:
 80489db:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80489df:	83 e4 f0             	and    $0xfffffff0,%esp
 80489e2:	ff 71 fc             	pushl  -0x4(%ecx)
 80489e5:	55                   	push   %ebp
 80489e6:	89 e5                	mov    %esp,%ebp
 80489e8:	53                   	push   %ebx
 80489e9:	51                   	push   %ecx
 80489ea:	8b 01                	mov    (%ecx),%eax
 80489ec:	8b 59 04             	mov    0x4(%ecx),%ebx
 80489ef:	83 f8 01             	cmp    $0x1,%eax
 80489f2:	0f 84 01 01 00 00    	je     8048af9 <main+0x11e>
 80489f8:	83 f8 02             	cmp    $0x2,%eax
 80489fb:	0f 85 24 01 00 00    	jne    8048b25 <main+0x14a>
 8048a01:	83 ec 08             	sub    $0x8,%esp
 8048a04:	68 a8 9e 04 08       	push   $0x8049ea8
 8048a09:	ff 73 04             	pushl  0x4(%ebx)
 8048a0c:	e8 0f fe ff ff       	call   8048820 <fopen@plt>
 8048a11:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 8048a16:	83 c4 10             	add    $0x10,%esp
 8048a19:	85 c0                	test   %eax,%eax
 8048a1b:	0f 84 e7 00 00 00    	je     8048b08 <main+0x12d>
 8048a21:	e8 0e 06 00 00       	call   8049034 <initialize_bomb>
 8048a26:	83 ec 0c             	sub    $0xc,%esp
 8048a29:	68 2c 9f 04 08       	push   $0x8049f2c
 8048a2e:	e8 8d fd ff ff       	call   80487c0 <puts@plt>
 8048a33:	c7 04 24 68 9f 04 08 	movl   $0x8049f68,(%esp)
 8048a3a:	e8 81 fd ff ff       	call   80487c0 <puts@plt>
 8048a3f:	e8 e0 06 00 00       	call   8049124 <read_line>
 8048a44:	89 04 24             	mov    %eax,(%esp)
 8048a47:	e8 f6 00 00 00       	call   8048b42 <phase_1>
 8048a4c:	e8 d2 07 00 00       	call   8049223 <phase_defused>
 8048a51:	c7 04 24 94 9f 04 08 	movl   $0x8049f94,(%esp)
 8048a58:	e8 63 fd ff ff       	call   80487c0 <puts@plt>
 8048a5d:	e8 c2 06 00 00       	call   8049124 <read_line>
 8048a62:	89 04 24             	mov    %eax,(%esp)
 8048a65:	e8 fb 00 00 00       	call   8048b65 <phase_2>
 8048a6a:	e8 b4 07 00 00       	call   8049223 <phase_defused>
 8048a6f:	c7 04 24 e1 9e 04 08 	movl   $0x8049ee1,(%esp)
 8048a76:	e8 45 fd ff ff       	call   80487c0 <puts@plt>
 8048a7b:	e8 a4 06 00 00       	call   8049124 <read_line>
 8048a80:	89 04 24             	mov    %eax,(%esp)
 8048a83:	e8 4c 01 00 00       	call   8048bd4 <phase_3>
 8048a88:	e8 96 07 00 00       	call   8049223 <phase_defused>
 8048a8d:	c7 04 24 ff 9e 04 08 	movl   $0x8049eff,(%esp)
 8048a94:	e8 27 fd ff ff       	call   80487c0 <puts@plt>
 8048a99:	e8 86 06 00 00       	call   8049124 <read_line>
 8048a9e:	89 04 24             	mov    %eax,(%esp)
 8048aa1:	e8 38 02 00 00       	call   8048cde <phase_4>
 8048aa6:	e8 78 07 00 00       	call   8049223 <phase_defused>
 8048aab:	c7 04 24 c0 9f 04 08 	movl   $0x8049fc0,(%esp)
 8048ab2:	e8 09 fd ff ff       	call   80487c0 <puts@plt>
 8048ab7:	e8 68 06 00 00       	call   8049124 <read_line>
 8048abc:	89 04 24             	mov    %eax,(%esp)
 8048abf:	e8 93 02 00 00       	call   8048d57 <phase_5>
 8048ac4:	e8 5a 07 00 00       	call   8049223 <phase_defused>
 8048ac9:	c7 04 24 0e 9f 04 08 	movl   $0x8049f0e,(%esp)
 8048ad0:	e8 eb fc ff ff       	call   80487c0 <puts@plt>
 8048ad5:	e8 4a 06 00 00       	call   8049124 <read_line>
 8048ada:	89 04 24             	mov    %eax,(%esp)
 8048add:	e8 bd 02 00 00       	call   8048d9f <phase_6>
 8048ae2:	e8 3c 07 00 00       	call   8049223 <phase_defused>
 8048ae7:	83 c4 10             	add    $0x10,%esp
 8048aea:	b8 00 00 00 00       	mov    $0x0,%eax
 8048aef:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048af2:	59                   	pop    %ecx
 8048af3:	5b                   	pop    %ebx
 8048af4:	5d                   	pop    %ebp
 8048af5:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048af8:	c3                   	ret    
 8048af9:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8048afe:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 8048b03:	e9 19 ff ff ff       	jmp    8048a21 <main+0x46>
 8048b08:	ff 73 04             	pushl  0x4(%ebx)
 8048b0b:	ff 33                	pushl  (%ebx)
 8048b0d:	68 aa 9e 04 08       	push   $0x8049eaa
 8048b12:	6a 01                	push   $0x1
 8048b14:	e8 27 fd ff ff       	call   8048840 <__printf_chk@plt>
 8048b19:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048b20:	e8 bb fc ff ff       	call   80487e0 <exit@plt>
 8048b25:	83 ec 04             	sub    $0x4,%esp
 8048b28:	ff 33                	pushl  (%ebx)
 8048b2a:	68 c7 9e 04 08       	push   $0x8049ec7
 8048b2f:	6a 01                	push   $0x1
 8048b31:	e8 0a fd ff ff       	call   8048840 <__printf_chk@plt>
 8048b36:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048b3d:	e8 9e fc ff ff       	call   80487e0 <exit@plt>

08048b42 <phase_1>:
 8048b42:	83 ec 14             	sub    $0x14,%esp
 8048b45:	68 e4 9f 04 08       	push   $0x8049fe4
 8048b4a:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048b4e:	e8 7c 04 00 00       	call   8048fcf <strings_not_equal>
 8048b53:	83 c4 10             	add    $0x10,%esp
 8048b56:	85 c0                	test   %eax,%eax
 8048b58:	75 04                	jne    8048b5e <phase_1+0x1c>
 8048b5a:	83 c4 0c             	add    $0xc,%esp
 8048b5d:	c3                   	ret    
 8048b5e:	e8 61 05 00 00       	call   80490c4 <explode_bomb>
 8048b63:	eb f5                	jmp    8048b5a <phase_1+0x18>

08048b65 <phase_2>:
 8048b65:	56                   	push   %esi
 8048b66:	53                   	push   %ebx
 8048b67:	83 ec 2c             	sub    $0x2c,%esp
 8048b6a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048b70:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048b74:	31 c0                	xor    %eax,%eax
 8048b76:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048b7a:	50                   	push   %eax
 8048b7b:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048b7f:	e8 65 05 00 00       	call   80490e9 <read_six_numbers>
 8048b84:	83 c4 10             	add    $0x10,%esp
 8048b87:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
 8048b8c:	75 07                	jne    8048b95 <phase_2+0x30>
 8048b8e:	83 7c 24 08 01       	cmpl   $0x1,0x8(%esp)
 8048b93:	74 05                	je     8048b9a <phase_2+0x35>
 8048b95:	e8 2a 05 00 00       	call   80490c4 <explode_bomb>
 8048b9a:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048b9e:	8d 74 24 14          	lea    0x14(%esp),%esi
 8048ba2:	eb 07                	jmp    8048bab <phase_2+0x46>
 8048ba4:	83 c3 04             	add    $0x4,%ebx
 8048ba7:	39 f3                	cmp    %esi,%ebx
 8048ba9:	74 11                	je     8048bbc <phase_2+0x57>
 8048bab:	8b 43 04             	mov    0x4(%ebx),%eax
 8048bae:	03 03                	add    (%ebx),%eax
 8048bb0:	39 43 08             	cmp    %eax,0x8(%ebx)
 8048bb3:	74 ef                	je     8048ba4 <phase_2+0x3f>
 8048bb5:	e8 0a 05 00 00       	call   80490c4 <explode_bomb>
 8048bba:	eb e8                	jmp    8048ba4 <phase_2+0x3f>
 8048bbc:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048bc0:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048bc7:	75 06                	jne    8048bcf <phase_2+0x6a>
 8048bc9:	83 c4 24             	add    $0x24,%esp
 8048bcc:	5b                   	pop    %ebx
 8048bcd:	5e                   	pop    %esi
 8048bce:	c3                   	ret    
 8048bcf:	e8 bc fb ff ff       	call   8048790 <__stack_chk_fail@plt>

08048bd4 <phase_3>:
 8048bd4:	83 ec 1c             	sub    $0x1c,%esp
 8048bd7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048bdd:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048be1:	31 c0                	xor    %eax,%eax
 8048be3:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048be7:	50                   	push   %eax
 8048be8:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048bec:	50                   	push   %eax
 8048bed:	68 af a1 04 08       	push   $0x804a1af
 8048bf2:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048bf6:	e8 15 fc ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048bfb:	83 c4 10             	add    $0x10,%esp
 8048bfe:	83 f8 01             	cmp    $0x1,%eax
 8048c01:	7e 12                	jle    8048c15 <phase_3+0x41>
 8048c03:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048c08:	77 43                	ja     8048c4d <phase_3+0x79>
 8048c0a:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048c0e:	ff 24 85 40 a0 04 08 	jmp    *0x804a040(,%eax,4)
 8048c15:	e8 aa 04 00 00       	call   80490c4 <explode_bomb>
 8048c1a:	eb e7                	jmp    8048c03 <phase_3+0x2f>
 8048c1c:	b8 89 03 00 00       	mov    $0x389,%eax
 8048c21:	eb 3b                	jmp    8048c5e <phase_3+0x8a>
 8048c23:	b8 68 03 00 00       	mov    $0x368,%eax
 8048c28:	eb 34                	jmp    8048c5e <phase_3+0x8a>
 8048c2a:	b8 49 03 00 00       	mov    $0x349,%eax
 8048c2f:	eb 2d                	jmp    8048c5e <phase_3+0x8a>
 8048c31:	b8 dc 00 00 00       	mov    $0xdc,%eax
 8048c36:	eb 26                	jmp    8048c5e <phase_3+0x8a>
 8048c38:	b8 4b 02 00 00       	mov    $0x24b,%eax
 8048c3d:	eb 1f                	jmp    8048c5e <phase_3+0x8a>
 8048c3f:	b8 7f 03 00 00       	mov    $0x37f,%eax
 8048c44:	eb 18                	jmp    8048c5e <phase_3+0x8a>
 8048c46:	b8 1d 01 00 00       	mov    $0x11d,%eax
 8048c4b:	eb 11                	jmp    8048c5e <phase_3+0x8a>
 8048c4d:	e8 72 04 00 00       	call   80490c4 <explode_bomb>
 8048c52:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c57:	eb 05                	jmp    8048c5e <phase_3+0x8a>
 8048c59:	b8 5e 02 00 00       	mov    $0x25e,%eax
 8048c5e:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048c62:	74 05                	je     8048c69 <phase_3+0x95>
 8048c64:	e8 5b 04 00 00       	call   80490c4 <explode_bomb>
 8048c69:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c6d:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c74:	75 04                	jne    8048c7a <phase_3+0xa6>
 8048c76:	83 c4 1c             	add    $0x1c,%esp
 8048c79:	c3                   	ret    
 8048c7a:	e8 11 fb ff ff       	call   8048790 <__stack_chk_fail@plt>

08048c7f <func4>:
 8048c7f:	56                   	push   %esi
 8048c80:	53                   	push   %ebx
 8048c81:	83 ec 04             	sub    $0x4,%esp
 8048c84:	8b 4c 24 10          	mov    0x10(%esp),%ecx //ecx = first par.
 8048c88:	8b 44 24 14          	mov    0x14(%esp),%eax //eax = 0
 8048c8c:	8b 5c 24 18          	mov    0x18(%esp),%ebx //ebx = 0xe
 8048c90:	89 de                	mov    %ebx,%esi
 8048c92:	29 c6                	sub    %eax,%esi
 8048c94:	89 f2                	mov    %esi,%edx
 8048c96:	c1 ea 1f             	shr    $0x1f,%edx
 8048c99:	01 f2                	add    %esi,%edx
 8048c9b:	d1 fa                	sar    %edx
 8048c9d:	01 c2                	add    %eax,%edx
 8048c9f:	39 ca                	cmp    %ecx,%edx
 8048ca1:	7f 0f                	jg     8048cb2 <func4+0x33>
 8048ca3:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ca8:	39 ca                	cmp    %ecx,%edx
 8048caa:	7c 1b                	jl     8048cc7 <func4+0x48>
 8048cac:	83 c4 04             	add    $0x4,%esp
 8048caf:	5b                   	pop    %ebx
 8048cb0:	5e                   	pop    %esi
 8048cb1:	c3                   	ret    
 8048cb2:	83 ec 04             	sub    $0x4,%esp
 8048cb5:	83 ea 01             	sub    $0x1,%edx
 8048cb8:	52                   	push   %edx
 8048cb9:	50                   	push   %eax
 8048cba:	51                   	push   %ecx
 8048cbb:	e8 bf ff ff ff       	call   8048c7f <func4>
 8048cc0:	83 c4 10             	add    $0x10,%esp
 8048cc3:	01 c0                	add    %eax,%eax
 8048cc5:	eb e5                	jmp    8048cac <func4+0x2d>
 8048cc7:	83 ec 04             	sub    $0x4,%esp
 8048cca:	53                   	push   %ebx
 8048ccb:	83 c2 01             	add    $0x1,%edx
 8048cce:	52                   	push   %edx
 8048ccf:	51                   	push   %ecx
 8048cd0:	e8 aa ff ff ff       	call   8048c7f <func4>
 8048cd5:	83 c4 10             	add    $0x10,%esp
 8048cd8:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048cdc:	eb ce                	jmp    8048cac <func4+0x2d>

08048cde <phase_4>:
 8048cde:	83 ec 1c             	sub    $0x1c,%esp
 8048ce1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048ce7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048ceb:	31 c0                	xor    %eax,%eax
 8048ced:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048cf1:	50                   	push   %eax
 8048cf2:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048cf6:	50                   	push   %eax
 8048cf7:	68 af a1 04 08       	push   $0x804a1af  //print %d %d two paramrters  
 8048cfc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048d00:	e8 0b fb ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8048d05:	83 c4 10             	add    $0x10,%esp
 8048d08:	83 f8 02             	cmp    $0x2,%eax   //two paramrters
 8048d0b:	74 33                	je     8048d40 <phase_4+0x62>
 8048d0d:	e8 b2 03 00 00       	call   80490c4 <explode_bomb>
 8048d12:	83 ec 04             	sub    $0x4,%esp
 8048d15:	6a 0e                	push   $0xe
 8048d17:	6a 00                	push   $0x0
 8048d19:	ff 74 24 10          	pushl  0x10(%esp)
 8048d1d:	e8 5d ff ff ff       	call   8048c7f <func4>
 8048d22:	83 c4 10             	add    $0x10,%esp
 8048d25:	83 f8 06             	cmp    $0x6,%eax   //require eax =6 eax value = call fun4
 8048d28:	74 1f                	je     8048d49 <phase_4+0x6b>
 8048d2a:	e8 95 03 00 00       	call   80490c4 <explode_bomb>
 8048d2f:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048d33:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d3a:	75 16                	jne    8048d52 <phase_4+0x74>
 8048d3c:	83 c4 1c             	add    $0x1c,%esp
 8048d3f:	c3                   	ret    
 8048d40:	83 7c 24 04 0e       	cmpl   $0xe,0x4(%esp)//first par. <= 15
 8048d45:	76 cb                	jbe    8048d12 <phase_4+0x34>
 8048d47:	eb c4                	jmp    8048d0d <phase_4+0x2f>
 8048d49:	83 7c 24 08 06       	cmpl   $0x6,0x8(%esp) //par2 = 6
 8048d4e:	75 da                	jne    8048d2a <phase_4+0x4c>
 8048d50:	eb dd                	jmp    8048d2f <phase_4+0x51>
 8048d52:	e8 39 fa ff ff       	call   8048790 <__stack_chk_fail@plt>

08048d57 <phase_5>:
 8048d57:	53                   	push   %ebx
 8048d58:	83 ec 14             	sub    $0x14,%esp
 8048d5b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8048d5f:	53                   	push   %ebx
 8048d60:	e8 4b 02 00 00       	call   8048fb0 <string_length>
 8048d65:	83 c4 10             	add    $0x10,%esp
 8048d68:	83 f8 06             	cmp    $0x6,%eax //require eax = 6 guess string length = 6
 8048d6b:	74 05                	je     8048d72 <phase_5+0x1b>
 8048d6d:	e8 52 03 00 00       	call   80490c4 <explode_bomb>
 8048d72:	89 d8                	mov    %ebx,%eax //eax = ebx,ebx is address of string
 8048d74:	83 c3 06             	add    $0x6,%ebx //ebx+6,the end of string
 8048d77:	b9 00 00 00 00       	mov    $0x0,%ecx //ecx = 0
 8048d7c:	0f b6 10             	movzbl (%eax),%edx //edx = acii of now letter
 8048d7f:	83 e2 0f             	and    $0xf,%edx //remain last 4 bits
 8048d82:	03 0c 95 60 a0 04 08 	add    0x804a060(,%edx,4),%ecx // ecx+[0x804a060+4*edx]
 8048d89:	83 c0 01             	add    $0x1,%eax //eax+1,eax is ptr of string
 8048d8c:	39 d8                	cmp    %ebx,%eax
 8048d8e:	75 ec                	jne    8048d7c <phase_5+0x25>
 8048d90:	83 f9 45             	cmp    $0x45,%ecx
 8048d93:	74 05                	je     8048d9a <phase_5+0x43>
 8048d95:	e8 2a 03 00 00       	call   80490c4 <explode_bomb>
 8048d9a:	83 c4 08             	add    $0x8,%esp
 8048d9d:	5b                   	pop    %ebx
 8048d9e:	c3                   	ret    

08048d9f <phase_6>:
 8048d9f:	56                   	push   %esi
 8048da0:	53                   	push   %ebx
 8048da1:	83 ec 4c             	sub    $0x4c,%esp
 8048da4:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048daa:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048dae:	31 c0                	xor    %eax,%eax
 8048db0:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048db4:	50                   	push   %eax
 8048db5:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048db9:	e8 2b 03 00 00       	call   80490e9 <read_six_numbers>//paramters is 6 numbers return eax = 6
 8048dbe:	83 c4 10             	add    $0x10,%esp
 8048dc1:	be 00 00 00 00       	mov    $0x0,%esi//ptr
 8048dc6:	eb 1c                	jmp    8048de4 <phase_6+0x45>
 8048dc8:	83 c6 01             	add    $0x1,%esi
 8048dcb:	83 fe 06             	cmp    $0x6,%esi
 8048dce:	74 2e                	je     8048dfe <phase_6+0x5f> //end loop
 8048dd0:	89 f3                	mov    %esi,%ebx
 8048dd2:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax //second par.
 8048dd6:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4) //compare with first
 8048dda:	74 1b                	je     8048df7 <phase_6+0x58>//don't equal with first
 8048ddc:	83 c3 01             	add    $0x1,%ebx
 8048ddf:	83 fb 05             	cmp    $0x5,%ebx
 8048de2:	7e ee                	jle    8048dd2 <phase_6+0x33>
 8048de4:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax //eax <= 6 [esp+4*esi+0xc] where is the input,every input <= 6 
 8048de8:	83 e8 01             	sub    $0x1,%eax
 8048deb:	83 f8 05             	cmp    $0x5,%eax
 8048dee:	76 d8                	jbe    8048dc8 <phase_6+0x29>
 8048df0:	e8 cf 02 00 00       	call   80490c4 <explode_bomb>
 8048df5:	eb d1                	jmp    8048dc8 <phase_6+0x29>
 8048df7:	e8 c8 02 00 00       	call   80490c4 <explode_bomb>
 8048dfc:	eb de                	jmp    8048ddc <phase_6+0x3d>
 8048dfe:	bb 00 00 00 00       	mov    $0x0,%ebx  //first loop end ebx = 0
 8048e03:	89 de                	mov    %ebx,%esi  //esi = 0
 8048e05:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx //ecx = first par.
 8048e09:	b8 01 00 00 00       	mov    $0x1,%eax //eax = 1
 8048e0e:	ba 3c c1 04 08       	mov    $0x804c13c,%edx //address <node>
 8048e13:	83 f9 01             	cmp    $0x1,%ecx
 8048e16:	7e 0a                	jle    8048e22 <phase_6+0x83> //if ecx=1 to 8048e22
 8048e18:	8b 52 08             	mov    0x8(%edx),%edx //node but why? add edx,12
 8048e1b:	83 c0 01             	add    $0x1,%eax
 8048e1e:	39 c8                	cmp    %ecx,%eax
 8048e20:	75 f6                	jne    8048e18 <phase_6+0x79> //edx = 0x804c13c +(x-1)*12,eax = ecx = x
 8048e22:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)//address edx move after input
 8048e26:	83 c3 01             	add    $0x1,%ebx //8048e03
 8048e29:	83 fb 06             	cmp    $0x6,%ebx
 8048e2c:	75 d5                	jne    8048e03 <phase_6+0x64>
 8048e2e:	8b 5c 24 24          	mov    0x24(%esp),%ebx //ebx = first address
 8048e32:	89 d9                	mov    %ebx,%ecx //ecx = ebx
 8048e34:	b8 01 00 00 00       	mov    $0x1,%eax //eax = 1
 8048e39:	8b 54 84 24          	mov    0x24(%esp,%eax,4),%edx //edx = second address
 8048e3d:	89 51 08             	mov    %edx,0x8(%ecx) //[ecx + 8] = edx /pre address to next in order to connect as list
 8048e40:	83 c0 01             	add    $0x1,%eax
 8048e43:	89 d1                	mov    %edx,%ecx //ecx = edx
 8048e45:	83 f8 06             	cmp    $0x6,%eax
 8048e48:	75 ef                	jne    8048e39 <phase_6+0x9a>
 8048e4a:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)//tail ptr = 0
 8048e51:	be 05 00 00 00       	mov    $0x5,%esi
 8048e56:	eb 08                	jmp    8048e60 <phase_6+0xc1>

 8048e58:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8048e5b:	83 ee 01             	sub    $0x1,%esi
 8048e5e:	74 10                	je     8048e70 <phase_6+0xd1> //loop 5 times
 8048e60:	8b 43 08             	mov    0x8(%ebx),%eax //first ebx = first input's address
eax = list next number's address
 8048e63:	8b 00                	mov    (%eax),%eax
 8048e65:	39 03                	cmp    %eax,(%ebx) //require (ebx) <= eax
 8048e67:	7e ef                	jle    8048e58 <phase_6+0xb9>

 8048e69:	e8 56 02 00 00       	call   80490c4 <explode_bomb>
 8048e6e:	eb e8                	jmp    8048e58 <phase_6+0xb9>
 8048e70:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8048e74:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e7b:	75 06                	jne    8048e83 <phase_6+0xe4>
 8048e7d:	83 c4 44             	add    $0x44,%esp
 8048e80:	5b                   	pop    %ebx
 8048e81:	5e                   	pop    %esi
 8048e82:	c3                   	ret    
 8048e83:	e8 08 f9 ff ff       	call   8048790 <__stack_chk_fail@plt>

08048e88 <fun7>:
 8048e88:	53                   	push   %ebx
 8048e89:	83 ec 08             	sub    $0x8,%esp
 8048e8c:	8b 54 24 10          	mov    0x10(%esp),%edx //$'s address
 8048e90:	8b 4c 24 14          	mov    0x14(%esp),%ecx //98
 8048e94:	85 d2                	test   %edx,%edx //if edx = 0? return -1 then boom
 8048e96:	74 3a                	je     8048ed2 <fun7+0x4a>
 8048e98:	8b 1a                	mov    (%edx),%ebx /ebx = '$' acii 36
 8048e9a:	39 cb                	cmp    %ecx,%ebx
 8048e9c:	7f 21                	jg     8048ebf <fun7+0x37>
 8048e9e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ea3:	39 cb                	cmp    %ecx,%ebx
 8048ea5:	74 13                	je     8048eba <fun7+0x32>
 8048ea7:	83 ec 08             	sub    $0x8,%esp
 8048eaa:	51                   	push   %ecx
 8048eab:	ff 72 08             	pushl  0x8(%edx)

 8048eae:	e8 d5 ff ff ff       	call   8048e88 <fun7>
 8048eb3:	83 c4 10             	add    $0x10,%esp
 8048eb6:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax//return*2+1
 8048eba:	83 c4 08             	add    $0x8,%esp
 8048ebd:	5b                   	pop    %ebx
 8048ebe:	c3                   	ret    
 8048ebf:	83 ec 08             	sub    $0x8,%esp
 8048ec2:	51                   	push   %ecx
 8048ec3:	ff 72 04             	pushl  0x4(%edx)
 8048ec6:	e8 bd ff ff ff       	call   8048e88 <fun7>
 8048ecb:	83 c4 10             	add    $0x10,%esp
 8048ece:	01 c0                	add    %eax,%eax //return*2
 8048ed0:	eb e8                	jmp    8048eba <fun7+0x32>
 8048ed2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8048ed7:	eb e1                	jmp    8048eba <fun7+0x32>

08048ed9 <secret_phase>:
 8048ed9:	53                   	push   %ebx
 8048eda:	83 ec 08             	sub    $0x8,%esp
 8048edd:	e8 42 02 00 00       	call   8049124 <read_line>
 8048ee2:	83 ec 04             	sub    $0x4,%esp
 8048ee5:	6a 0a                	push   $0xa  
 8048ee7:	6a 00                	push   $0x0
 8048ee9:	50                   	push   %eax //eax = 0x804c5c0,input's address
 8048eea:	e8 91 f9 ff ff       	call   8048880 <strtol@plt>//string to long
 8048eef:	89 c3                	mov    %eax,%ebx  //eax = ebx = 0,edx = 10?
 8048ef1:	8d 40 ff             	lea    -0x1(%eax),%eax//x-1
 8048ef4:	83 c4 10             	add    $0x10,%esp
 8048ef7:	3d e8 03 00 00       	cmp    $0x3e8,%eax  //eax <= 3e8
 8048efc:	77 32                	ja     8048f30 <secret_phase+0x57>
 8048efe:	83 ec 08             	sub    $0x8,%esp
 8048f01:	53                   	push   %ebx //ebx = x
 8048f02:	68 88 c0 04 08       	push   $0x804c088//"$"end of string
 8048f07:	e8 7c ff ff ff       	call   8048e88 <fun7>             //fun7
 8048f0c:	83 c4 10             	add    $0x10,%esp
 8048f0f:	83 f8 05             	cmp    $0x5,%eax //eax = 5
 8048f12:	74 05                	je     8048f19 <secret_phase+0x40>
 8048f14:	e8 ab 01 00 00       	call   80490c4 <explode_bomb>
 8048f19:	83 ec 0c             	sub    $0xc,%esp
 8048f1c:	68 10 a0 04 08       	push   $0x804a010
 8048f21:	e8 9a f8 ff ff       	call   80487c0 <puts@plt>
 8048f26:	e8 f8 02 00 00       	call   8049223 <phase_defused>
 8048f2b:	83 c4 18             	add    $0x18,%esp
 8048f2e:	5b                   	pop    %ebx
 8048f2f:	c3                   	ret    
 8048f30:	e8 8f 01 00 00       	call   80490c4 <explode_bomb>
 8048f35:	eb c7                	jmp    8048efe <secret_phase+0x25>

08048f37 <sig_handler>:
 8048f37:	83 ec 18             	sub    $0x18,%esp
 8048f3a:	68 a0 a0 04 08       	push   $0x804a0a0
 8048f3f:	e8 7c f8 ff ff       	call   80487c0 <puts@plt>
 8048f44:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048f4b:	e8 20 f8 ff ff       	call   8048770 <sleep@plt>
 8048f50:	83 c4 08             	add    $0x8,%esp
 8048f53:	68 62 a1 04 08       	push   $0x804a162
 8048f58:	6a 01                	push   $0x1
 8048f5a:	e8 e1 f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048f5f:	83 c4 04             	add    $0x4,%esp
 8048f62:	ff 35 c4 c3 04 08    	pushl  0x804c3c4
 8048f68:	e8 d3 f7 ff ff       	call   8048740 <fflush@plt>
 8048f6d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048f74:	e8 f7 f7 ff ff       	call   8048770 <sleep@plt>
 8048f79:	c7 04 24 6a a1 04 08 	movl   $0x804a16a,(%esp)
 8048f80:	e8 3b f8 ff ff       	call   80487c0 <puts@plt>
 8048f85:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 8048f8c:	e8 4f f8 ff ff       	call   80487e0 <exit@plt>

08048f91 <invalid_phase>:
 8048f91:	83 ec 10             	sub    $0x10,%esp
 8048f94:	ff 74 24 14          	pushl  0x14(%esp)
 8048f98:	68 72 a1 04 08       	push   $0x804a172
 8048f9d:	6a 01                	push   $0x1
 8048f9f:	e8 9c f8 ff ff       	call   8048840 <__printf_chk@plt>
 8048fa4:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048fab:	e8 30 f8 ff ff       	call   80487e0 <exit@plt>

08048fb0 <string_length>:
 8048fb0:	8b 54 24 04          	mov    0x4(%esp),%edx
 8048fb4:	80 3a 00             	cmpb   $0x0,(%edx)
 8048fb7:	74 10                	je     8048fc9 <string_length+0x19>
 8048fb9:	b8 00 00 00 00       	mov    $0x0,%eax
 8048fbe:	83 c0 01             	add    $0x1,%eax
 8048fc1:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8048fc5:	75 f7                	jne    8048fbe <string_length+0xe>
 8048fc7:	f3 c3                	repz ret 
 8048fc9:	b8 00 00 00 00       	mov    $0x0,%eax
 8048fce:	c3                   	ret    

08048fcf <strings_not_equal>:
 8048fcf:	57                   	push   %edi
 8048fd0:	56                   	push   %esi
 8048fd1:	53                   	push   %ebx
 8048fd2:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048fd6:	8b 74 24 14          	mov    0x14(%esp),%esi
 8048fda:	53                   	push   %ebx
 8048fdb:	e8 d0 ff ff ff       	call   8048fb0 <string_length>
 8048fe0:	89 c7                	mov    %eax,%edi
 8048fe2:	89 34 24             	mov    %esi,(%esp)
 8048fe5:	e8 c6 ff ff ff       	call   8048fb0 <string_length>
 8048fea:	83 c4 04             	add    $0x4,%esp
 8048fed:	ba 01 00 00 00       	mov    $0x1,%edx
 8048ff2:	39 c7                	cmp    %eax,%edi
 8048ff4:	74 06                	je     8048ffc <strings_not_equal+0x2d>
 8048ff6:	89 d0                	mov    %edx,%eax
 8048ff8:	5b                   	pop    %ebx
 8048ff9:	5e                   	pop    %esi
 8048ffa:	5f                   	pop    %edi
 8048ffb:	c3                   	ret    
 8048ffc:	0f b6 03             	movzbl (%ebx),%eax
 8048fff:	84 c0                	test   %al,%al
 8049001:	74 23                	je     8049026 <strings_not_equal+0x57>
 8049003:	3a 06                	cmp    (%esi),%al
 8049005:	75 26                	jne    804902d <strings_not_equal+0x5e>
 8049007:	83 c3 01             	add    $0x1,%ebx
 804900a:	83 c6 01             	add    $0x1,%esi
 804900d:	0f b6 03             	movzbl (%ebx),%eax
 8049010:	84 c0                	test   %al,%al
 8049012:	74 0b                	je     804901f <strings_not_equal+0x50>
 8049014:	3a 06                	cmp    (%esi),%al
 8049016:	74 ef                	je     8049007 <strings_not_equal+0x38>
 8049018:	ba 01 00 00 00       	mov    $0x1,%edx
 804901d:	eb d7                	jmp    8048ff6 <strings_not_equal+0x27>
 804901f:	ba 00 00 00 00       	mov    $0x0,%edx
 8049024:	eb d0                	jmp    8048ff6 <strings_not_equal+0x27>
 8049026:	ba 00 00 00 00       	mov    $0x0,%edx
 804902b:	eb c9                	jmp    8048ff6 <strings_not_equal+0x27>
 804902d:	ba 01 00 00 00       	mov    $0x1,%edx
 8049032:	eb c2                	jmp    8048ff6 <strings_not_equal+0x27>

08049034 <initialize_bomb>:
 8049034:	83 ec 14             	sub    $0x14,%esp
 8049037:	68 37 8f 04 08       	push   $0x8048f37
 804903c:	6a 02                	push   $0x2
 804903e:	e8 1d f7 ff ff       	call   8048760 <signal@plt>
 8049043:	83 c4 1c             	add    $0x1c,%esp
 8049046:	c3                   	ret    

08049047 <initialize_bomb_solve>:
 8049047:	f3 c3                	repz ret 

08049049 <blank_line>:
 8049049:	56                   	push   %esi
 804904a:	53                   	push   %ebx
 804904b:	83 ec 04             	sub    $0x4,%esp
 804904e:	8b 74 24 10          	mov    0x10(%esp),%esi
 8049052:	0f b6 1e             	movzbl (%esi),%ebx
 8049055:	84 db                	test   %bl,%bl
 8049057:	74 1b                	je     8049074 <blank_line+0x2b>
 8049059:	e8 52 f8 ff ff       	call   80488b0 <__ctype_b_loc@plt>
 804905e:	83 c6 01             	add    $0x1,%esi
 8049061:	0f be db             	movsbl %bl,%ebx
 8049064:	8b 00                	mov    (%eax),%eax
 8049066:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 804906b:	75 e5                	jne    8049052 <blank_line+0x9>
 804906d:	b8 00 00 00 00       	mov    $0x0,%eax
 8049072:	eb 05                	jmp    8049079 <blank_line+0x30>
 8049074:	b8 01 00 00 00       	mov    $0x1,%eax
 8049079:	83 c4 04             	add    $0x4,%esp
 804907c:	5b                   	pop    %ebx
 804907d:	5e                   	pop    %esi
 804907e:	c3                   	ret    

0804907f <skip>:
 804907f:	53                   	push   %ebx
 8049080:	83 ec 08             	sub    $0x8,%esp
 8049083:	83 ec 04             	sub    $0x4,%esp
 8049086:	ff 35 d0 c3 04 08    	pushl  0x804c3d0
 804908c:	6a 50                	push   $0x50
 804908e:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 8049093:	8d 04 80             	lea    (%eax,%eax,4),%eax
 8049096:	c1 e0 04             	shl    $0x4,%eax
 8049099:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 804909e:	50                   	push   %eax
 804909f:	e8 ac f6 ff ff       	call   8048750 <fgets@plt>
 80490a4:	89 c3                	mov    %eax,%ebx
 80490a6:	83 c4 10             	add    $0x10,%esp
 80490a9:	85 c0                	test   %eax,%eax
 80490ab:	74 10                	je     80490bd <skip+0x3e>
 80490ad:	83 ec 0c             	sub    $0xc,%esp
 80490b0:	50                   	push   %eax
 80490b1:	e8 93 ff ff ff       	call   8049049 <blank_line>
 80490b6:	83 c4 10             	add    $0x10,%esp
 80490b9:	85 c0                	test   %eax,%eax
 80490bb:	75 c6                	jne    8049083 <skip+0x4>
 80490bd:	89 d8                	mov    %ebx,%eax
 80490bf:	83 c4 08             	add    $0x8,%esp
 80490c2:	5b                   	pop    %ebx
 80490c3:	c3                   	ret    

080490c4 <explode_bomb>:
 80490c4:	83 ec 18             	sub    $0x18,%esp
 80490c7:	68 83 a1 04 08       	push   $0x804a183
 80490cc:	e8 ef f6 ff ff       	call   80487c0 <puts@plt>
 80490d1:	c7 04 24 8c a1 04 08 	movl   $0x804a18c,(%esp)
 80490d8:	e8 e3 f6 ff ff       	call   80487c0 <puts@plt>
 80490dd:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80490e4:	e8 f7 f6 ff ff       	call   80487e0 <exit@plt>

080490e9 <read_six_numbers>:
 80490e9:	83 ec 0c             	sub    $0xc,%esp
 80490ec:	8b 44 24 14          	mov    0x14(%esp),%eax
 80490f0:	8d 50 14             	lea    0x14(%eax),%edx
 80490f3:	52                   	push   %edx
 80490f4:	8d 50 10             	lea    0x10(%eax),%edx
 80490f7:	52                   	push   %edx
 80490f8:	8d 50 0c             	lea    0xc(%eax),%edx
 80490fb:	52                   	push   %edx
 80490fc:	8d 50 08             	lea    0x8(%eax),%edx
 80490ff:	52                   	push   %edx
 8049100:	8d 50 04             	lea    0x4(%eax),%edx
 8049103:	52                   	push   %edx
 8049104:	50                   	push   %eax
 8049105:	68 a3 a1 04 08       	push   $0x804a1a3
 804910a:	ff 74 24 2c          	pushl  0x2c(%esp)
 804910e:	e8 fd f6 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 8049113:	83 c4 20             	add    $0x20,%esp
 8049116:	83 f8 05             	cmp    $0x5,%eax
 8049119:	7e 04                	jle    804911f <read_six_numbers+0x36>
 804911b:	83 c4 0c             	add    $0xc,%esp
 804911e:	c3                   	ret    
 804911f:	e8 a0 ff ff ff       	call   80490c4 <explode_bomb>

08049124 <read_line>:
 8049124:	57                   	push   %edi
 8049125:	56                   	push   %esi
 8049126:	53                   	push   %ebx
 8049127:	e8 53 ff ff ff       	call   804907f <skip>
 804912c:	85 c0                	test   %eax,%eax
 804912e:	74 4b                	je     804917b <read_line+0x57>
 8049130:	8b 15 cc c3 04 08    	mov    0x804c3cc,%edx
 8049136:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 8049139:	c1 e3 04             	shl    $0x4,%ebx
 804913c:	81 c3 e0 c3 04 08    	add    $0x804c3e0,%ebx
 8049142:	b8 00 00 00 00       	mov    $0x0,%eax
 8049147:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804914c:	89 df                	mov    %ebx,%edi
 804914e:	f2 ae                	repnz scas %es:(%edi),%al
 8049150:	f7 d1                	not    %ecx
 8049152:	83 e9 01             	sub    $0x1,%ecx
 8049155:	83 f9 4e             	cmp    $0x4e,%ecx
 8049158:	0f 8f 8d 00 00 00    	jg     80491eb <read_line+0xc7>
 804915e:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049161:	c1 e0 04             	shl    $0x4,%eax
 8049164:	c6 84 01 df c3 04 08 	movb   $0x0,0x804c3df(%ecx,%eax,1)
 804916b:	00 
 804916c:	83 c2 01             	add    $0x1,%edx
 804916f:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 8049175:	89 d8                	mov    %ebx,%eax
 8049177:	5b                   	pop    %ebx
 8049178:	5e                   	pop    %esi
 8049179:	5f                   	pop    %edi
 804917a:	c3                   	ret    
 804917b:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 8049180:	39 05 d0 c3 04 08    	cmp    %eax,0x804c3d0
 8049186:	74 40                	je     80491c8 <read_line+0xa4>
 8049188:	83 ec 0c             	sub    $0xc,%esp
 804918b:	68 d3 a1 04 08       	push   $0x804a1d3
 8049190:	e8 1b f6 ff ff       	call   80487b0 <getenv@plt>
 8049195:	83 c4 10             	add    $0x10,%esp
 8049198:	85 c0                	test   %eax,%eax
 804919a:	75 45                	jne    80491e1 <read_line+0xbd>
 804919c:	a1 c0 c3 04 08       	mov    0x804c3c0,%eax
 80491a1:	a3 d0 c3 04 08       	mov    %eax,0x804c3d0
 80491a6:	e8 d4 fe ff ff       	call   804907f <skip>
 80491ab:	85 c0                	test   %eax,%eax
 80491ad:	75 81                	jne    8049130 <read_line+0xc>
 80491af:	83 ec 0c             	sub    $0xc,%esp
 80491b2:	68 b5 a1 04 08       	push   $0x804a1b5
 80491b7:	e8 04 f6 ff ff       	call   80487c0 <puts@plt>
 80491bc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80491c3:	e8 18 f6 ff ff       	call   80487e0 <exit@plt>
 80491c8:	83 ec 0c             	sub    $0xc,%esp
 80491cb:	68 b5 a1 04 08       	push   $0x804a1b5
 80491d0:	e8 eb f5 ff ff       	call   80487c0 <puts@plt>
 80491d5:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80491dc:	e8 ff f5 ff ff       	call   80487e0 <exit@plt>
 80491e1:	83 ec 0c             	sub    $0xc,%esp
 80491e4:	6a 00                	push   $0x0
 80491e6:	e8 f5 f5 ff ff       	call   80487e0 <exit@plt>
 80491eb:	83 ec 0c             	sub    $0xc,%esp
 80491ee:	68 de a1 04 08       	push   $0x804a1de
 80491f3:	e8 c8 f5 ff ff       	call   80487c0 <puts@plt>
 80491f8:	a1 cc c3 04 08       	mov    0x804c3cc,%eax
 80491fd:	8d 50 01             	lea    0x1(%eax),%edx
 8049200:	89 15 cc c3 04 08    	mov    %edx,0x804c3cc
 8049206:	6b c0 50             	imul   $0x50,%eax,%eax
 8049209:	05 e0 c3 04 08       	add    $0x804c3e0,%eax
 804920e:	ba f9 a1 04 08       	mov    $0x804a1f9,%edx
 8049213:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049218:	89 c7                	mov    %eax,%edi
 804921a:	89 d6                	mov    %edx,%esi
 804921c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804921e:	e8 a1 fe ff ff       	call   80490c4 <explode_bomb>

08049223 <phase_defused>:
 8049223:	83 ec 6c             	sub    $0x6c,%esp
 8049226:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804922c:	89 44 24 5c          	mov    %eax,0x5c(%esp)
 8049230:	31 c0                	xor    %eax,%eax
 8049232:	83 3d cc c3 04 08 06 	cmpl   $0x6,0x804c3cc
 8049239:	74 11                	je     804924c <phase_defused+0x29>
 804923b:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804923f:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049246:	75 7b                	jne    80492c3 <phase_defused+0xa0>
 8049248:	83 c4 6c             	add    $0x6c,%esp
 804924b:	c3                   	ret    
 804924c:	83 ec 0c             	sub    $0xc,%esp
 804924f:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049253:	50                   	push   %eax
 8049254:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049258:	50                   	push   %eax
 8049259:	8d 44 24 18          	lea    0x18(%esp),%eax
 804925d:	50                   	push   %eax
 804925e:	68 09 a2 04 08       	push   $0x804a209
 8049263:	68 d0 c4 04 08       	push   $0x804c4d0
 8049268:	e8 a3 f5 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 804926d:	83 c4 20             	add    $0x20,%esp
 8049270:	83 f8 03             	cmp    $0x3,%eax
 8049273:	74 12                	je     8049287 <phase_defused+0x64>
 8049275:	83 ec 0c             	sub    $0xc,%esp
 8049278:	68 38 a1 04 08       	push   $0x804a138
 804927d:	e8 3e f5 ff ff       	call   80487c0 <puts@plt>
 8049282:	83 c4 10             	add    $0x10,%esp
 8049285:	eb b4                	jmp    804923b <phase_defused+0x18>
 8049287:	83 ec 08             	sub    $0x8,%esp
 804928a:	68 12 a2 04 08       	push   $0x804a212 //DrVile
 804928f:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049293:	50                   	push   %eax
 8049294:	e8 36 fd ff ff       	call   8048fcf <strings_not_equal>
 8049299:	83 c4 10             	add    $0x10,%esp
 804929c:	85 c0                	test   %eax,%eax
 804929e:	75 d5                	jne    8049275 <phase_defused+0x52>
 80492a0:	83 ec 0c             	sub    $0xc,%esp
 80492a3:	68 d8 a0 04 08       	push   $0x804a0d8
 80492a8:	e8 13 f5 ff ff       	call   80487c0 <puts@plt>
 80492ad:	c7 04 24 00 a1 04 08 	movl   $0x804a100,(%esp)
 80492b4:	e8 07 f5 ff ff       	call   80487c0 <puts@plt>
 80492b9:	e8 1b fc ff ff       	call   8048ed9 <secret_phase>  //secret phase
 80492be:	83 c4 10             	add    $0x10,%esp
 80492c1:	eb b2                	jmp    8049275 <phase_defused+0x52>
 80492c3:	e8 c8 f4 ff ff       	call   8048790 <__stack_chk_fail@plt>

080492c8 <sigalrm_handler>:
 80492c8:	83 ec 0c             	sub    $0xc,%esp
 80492cb:	6a 00                	push   $0x0
 80492cd:	68 68 a2 04 08       	push   $0x804a268
 80492d2:	6a 01                	push   $0x1
 80492d4:	ff 35 a0 c3 04 08    	pushl  0x804c3a0
 80492da:	e8 81 f5 ff ff       	call   8048860 <__fprintf_chk@plt>
 80492df:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80492e6:	e8 f5 f4 ff ff       	call   80487e0 <exit@plt>

080492eb <rio_readlineb>:
 80492eb:	55                   	push   %ebp
 80492ec:	57                   	push   %edi
 80492ed:	56                   	push   %esi
 80492ee:	53                   	push   %ebx
 80492ef:	83 ec 1c             	sub    $0x1c,%esp
 80492f2:	83 f9 01             	cmp    $0x1,%ecx
 80492f5:	76 79                	jbe    8049370 <rio_readlineb+0x85>
 80492f7:	89 d7                	mov    %edx,%edi
 80492f9:	89 c3                	mov    %eax,%ebx
 80492fb:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80492ff:	bd 01 00 00 00       	mov    $0x1,%ebp
 8049304:	8d 70 0c             	lea    0xc(%eax),%esi
 8049307:	eb 0a                	jmp    8049313 <rio_readlineb+0x28>
 8049309:	e8 22 f5 ff ff       	call   8048830 <__errno_location@plt>
 804930e:	83 38 04             	cmpl   $0x4,(%eax)
 8049311:	75 66                	jne    8049379 <rio_readlineb+0x8e>
 8049313:	8b 43 04             	mov    0x4(%ebx),%eax
 8049316:	85 c0                	test   %eax,%eax
 8049318:	7f 23                	jg     804933d <rio_readlineb+0x52>
 804931a:	83 ec 04             	sub    $0x4,%esp
 804931d:	68 00 20 00 00       	push   $0x2000
 8049322:	56                   	push   %esi
 8049323:	ff 33                	pushl  (%ebx)
 8049325:	e8 06 f4 ff ff       	call   8048730 <read@plt>
 804932a:	89 43 04             	mov    %eax,0x4(%ebx)
 804932d:	83 c4 10             	add    $0x10,%esp
 8049330:	85 c0                	test   %eax,%eax
 8049332:	78 d5                	js     8049309 <rio_readlineb+0x1e>
 8049334:	85 c0                	test   %eax,%eax
 8049336:	74 48                	je     8049380 <rio_readlineb+0x95>
 8049338:	89 73 08             	mov    %esi,0x8(%ebx)
 804933b:	eb d6                	jmp    8049313 <rio_readlineb+0x28>
 804933d:	8b 4b 08             	mov    0x8(%ebx),%ecx
 8049340:	0f b6 11             	movzbl (%ecx),%edx
 8049343:	83 c1 01             	add    $0x1,%ecx
 8049346:	89 4b 08             	mov    %ecx,0x8(%ebx)
 8049349:	83 e8 01             	sub    $0x1,%eax
 804934c:	89 43 04             	mov    %eax,0x4(%ebx)
 804934f:	83 c7 01             	add    $0x1,%edi
 8049352:	88 57 ff             	mov    %dl,-0x1(%edi)
 8049355:	80 fa 0a             	cmp    $0xa,%dl
 8049358:	74 09                	je     8049363 <rio_readlineb+0x78>
 804935a:	83 c5 01             	add    $0x1,%ebp
 804935d:	3b 6c 24 0c          	cmp    0xc(%esp),%ebp
 8049361:	75 b0                	jne    8049313 <rio_readlineb+0x28>
 8049363:	c6 07 00             	movb   $0x0,(%edi)
 8049366:	89 e8                	mov    %ebp,%eax
 8049368:	83 c4 1c             	add    $0x1c,%esp
 804936b:	5b                   	pop    %ebx
 804936c:	5e                   	pop    %esi
 804936d:	5f                   	pop    %edi
 804936e:	5d                   	pop    %ebp
 804936f:	c3                   	ret    
 8049370:	89 d7                	mov    %edx,%edi
 8049372:	bd 01 00 00 00       	mov    $0x1,%ebp
 8049377:	eb ea                	jmp    8049363 <rio_readlineb+0x78>
 8049379:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804937e:	eb 05                	jmp    8049385 <rio_readlineb+0x9a>
 8049380:	b8 00 00 00 00       	mov    $0x0,%eax
 8049385:	85 c0                	test   %eax,%eax
 8049387:	75 0c                	jne    8049395 <rio_readlineb+0xaa>
 8049389:	83 fd 01             	cmp    $0x1,%ebp
 804938c:	75 d5                	jne    8049363 <rio_readlineb+0x78>
 804938e:	bd 00 00 00 00       	mov    $0x0,%ebp
 8049393:	eb d1                	jmp    8049366 <rio_readlineb+0x7b>
 8049395:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
 804939a:	eb ca                	jmp    8049366 <rio_readlineb+0x7b>

0804939c <submitr>:
 804939c:	55                   	push   %ebp
 804939d:	57                   	push   %edi
 804939e:	56                   	push   %esi
 804939f:	53                   	push   %ebx
 80493a0:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 80493a6:	8b 9c 24 74 a0 00 00 	mov    0xa074(%esp),%ebx
 80493ad:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 80493b4:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80493b8:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 80493bf:	89 44 24 10          	mov    %eax,0x10(%esp)
 80493c3:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 80493ca:	89 44 24 14          	mov    %eax,0x14(%esp)
 80493ce:	8b b4 24 88 a0 00 00 	mov    0xa088(%esp),%esi
 80493d5:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 80493dc:	89 44 24 18          	mov    %eax,0x18(%esp)
 80493e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80493e6:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 80493ed:	31 c0                	xor    %eax,%eax
 80493ef:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 80493f6:	00 
 80493f7:	6a 00                	push   $0x0
 80493f9:	6a 01                	push   $0x1
 80493fb:	6a 02                	push   $0x2
 80493fd:	e8 4e f4 ff ff       	call   8048850 <socket@plt>
 8049402:	83 c4 10             	add    $0x10,%esp
 8049405:	85 c0                	test   %eax,%eax
 8049407:	0f 88 04 01 00 00    	js     8049511 <submitr+0x175>
 804940d:	89 c5                	mov    %eax,%ebp
 804940f:	83 ec 0c             	sub    $0xc,%esp
 8049412:	53                   	push   %ebx
 8049413:	e8 58 f4 ff ff       	call   8048870 <gethostbyname@plt>
 8049418:	83 c4 10             	add    $0x10,%esp
 804941b:	85 c0                	test   %eax,%eax
 804941d:	0f 84 40 01 00 00    	je     8049563 <submitr+0x1c7>
 8049423:	8d 5c 24 30          	lea    0x30(%esp),%ebx
 8049427:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 804942e:	00 
 804942f:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 8049436:	00 
 8049437:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 804943e:	00 
 804943f:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 8049446:	00 
 8049447:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 804944e:	6a 0c                	push   $0xc
 8049450:	ff 70 0c             	pushl  0xc(%eax)
 8049453:	8b 40 10             	mov    0x10(%eax),%eax
 8049456:	ff 30                	pushl  (%eax)
 8049458:	8d 44 24 40          	lea    0x40(%esp),%eax
 804945c:	50                   	push   %eax
 804945d:	e8 6e f3 ff ff       	call   80487d0 <__memmove_chk@plt>
 8049462:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049469:	00 
 804946a:	66 c1 c8 08          	ror    $0x8,%ax
 804946e:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 8049473:	83 c4 0c             	add    $0xc,%esp
 8049476:	6a 10                	push   $0x10
 8049478:	53                   	push   %ebx
 8049479:	55                   	push   %ebp
 804947a:	e8 11 f4 ff ff       	call   8048890 <connect@plt>
 804947f:	83 c4 10             	add    $0x10,%esp
 8049482:	85 c0                	test   %eax,%eax
 8049484:	0f 88 49 01 00 00    	js     80495d3 <submitr+0x237>
 804948a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 804948f:	b8 00 00 00 00       	mov    $0x0,%eax
 8049494:	89 d1                	mov    %edx,%ecx
 8049496:	89 f7                	mov    %esi,%edi
 8049498:	f2 ae                	repnz scas %es:(%edi),%al
 804949a:	89 cb                	mov    %ecx,%ebx
 804949c:	f7 d3                	not    %ebx
 804949e:	89 d1                	mov    %edx,%ecx
 80494a0:	8b 7c 24 08          	mov    0x8(%esp),%edi
 80494a4:	f2 ae                	repnz scas %es:(%edi),%al
 80494a6:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 80494aa:	89 d1                	mov    %edx,%ecx
 80494ac:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80494b0:	f2 ae                	repnz scas %es:(%edi),%al
 80494b2:	89 cf                	mov    %ecx,%edi
 80494b4:	f7 d7                	not    %edi
 80494b6:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
 80494ba:	89 d1                	mov    %edx,%ecx
 80494bc:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80494c0:	f2 ae                	repnz scas %es:(%edi),%al
 80494c2:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80494c6:	2b 54 24 18          	sub    0x18(%esp),%edx
 80494ca:	29 ca                	sub    %ecx,%edx
 80494cc:	8d 44 5b fd          	lea    -0x3(%ebx,%ebx,2),%eax
 80494d0:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 80494d4:	3d 00 20 00 00       	cmp    $0x2000,%eax
 80494d9:	0f 87 56 01 00 00    	ja     8049635 <submitr+0x299>
 80494df:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 80494e6:	b9 00 08 00 00       	mov    $0x800,%ecx
 80494eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80494f0:	89 d7                	mov    %edx,%edi
 80494f2:	f3 ab                	rep stos %eax,%es:(%edi)
 80494f4:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80494f9:	89 f7                	mov    %esi,%edi
 80494fb:	f2 ae                	repnz scas %es:(%edi),%al
 80494fd:	f7 d1                	not    %ecx
 80494ff:	89 cb                	mov    %ecx,%ebx
 8049501:	83 eb 01             	sub    $0x1,%ebx
 8049504:	0f 84 07 06 00 00    	je     8049b11 <submitr+0x775>
 804950a:	89 d7                	mov    %edx,%edi
 804950c:	e9 b0 01 00 00       	jmp    80496c1 <submitr+0x325>
 8049511:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049515:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804951b:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049522:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049529:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049530:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049537:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804953e:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 8049545:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 804954c:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 8049553:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 8049559:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804955e:	e9 d0 04 00 00       	jmp    8049a33 <submitr+0x697>
 8049563:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049567:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804956d:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 8049574:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 804957b:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 8049582:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049589:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049590:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 8049597:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 804959e:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80495a5:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 80495ac:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 80495b3:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 80495b9:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 80495bd:	83 ec 0c             	sub    $0xc,%esp
 80495c0:	55                   	push   %ebp
 80495c1:	e8 da f2 ff ff       	call   80488a0 <close@plt>
 80495c6:	83 c4 10             	add    $0x10,%esp
 80495c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80495ce:	e9 60 04 00 00       	jmp    8049a33 <submitr+0x697>
 80495d3:	8b 44 24 14          	mov    0x14(%esp),%eax
 80495d7:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80495dd:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 80495e4:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 80495eb:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 80495f2:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 80495f9:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 8049600:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 8049607:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 804960e:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 8049615:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 804961b:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 804961f:	83 ec 0c             	sub    $0xc,%esp
 8049622:	55                   	push   %ebp
 8049623:	e8 78 f2 ff ff       	call   80488a0 <close@plt>
 8049628:	83 c4 10             	add    $0x10,%esp
 804962b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049630:	e9 fe 03 00 00       	jmp    8049a33 <submitr+0x697>
 8049635:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049639:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804963f:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 8049646:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 804964d:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 8049654:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 804965b:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 8049662:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049669:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 8049670:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 8049677:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 804967e:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 8049685:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 804968c:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 8049693:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 804969a:	83 ec 0c             	sub    $0xc,%esp
 804969d:	55                   	push   %ebp
 804969e:	e8 fd f1 ff ff       	call   80488a0 <close@plt>
 80496a3:	83 c4 10             	add    $0x10,%esp
 80496a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80496ab:	e9 83 03 00 00       	jmp    8049a33 <submitr+0x697>
 80496b0:	88 17                	mov    %dl,(%edi)
 80496b2:	8d 7f 01             	lea    0x1(%edi),%edi
 80496b5:	83 c6 01             	add    $0x1,%esi
 80496b8:	83 eb 01             	sub    $0x1,%ebx
 80496bb:	0f 84 50 04 00 00    	je     8049b11 <submitr+0x775>
 80496c1:	0f b6 16             	movzbl (%esi),%edx
 80496c4:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 80496c7:	b8 01 00 00 00       	mov    $0x1,%eax
 80496cc:	80 f9 0f             	cmp    $0xf,%cl
 80496cf:	77 0d                	ja     80496de <submitr+0x342>
 80496d1:	b8 d9 ff 00 00       	mov    $0xffd9,%eax
 80496d6:	d3 e8                	shr    %cl,%eax
 80496d8:	83 f0 01             	xor    $0x1,%eax
 80496db:	83 e0 01             	and    $0x1,%eax
 80496de:	80 fa 5f             	cmp    $0x5f,%dl
 80496e1:	74 cd                	je     80496b0 <submitr+0x314>
 80496e3:	84 c0                	test   %al,%al
 80496e5:	74 c9                	je     80496b0 <submitr+0x314>
 80496e7:	89 d0                	mov    %edx,%eax
 80496e9:	83 e0 df             	and    $0xffffffdf,%eax
 80496ec:	83 e8 41             	sub    $0x41,%eax
 80496ef:	3c 19                	cmp    $0x19,%al
 80496f1:	76 bd                	jbe    80496b0 <submitr+0x314>
 80496f3:	80 fa 20             	cmp    $0x20,%dl
 80496f6:	74 58                	je     8049750 <submitr+0x3b4>
 80496f8:	8d 42 e0             	lea    -0x20(%edx),%eax
 80496fb:	3c 5f                	cmp    $0x5f,%al
 80496fd:	76 09                	jbe    8049708 <submitr+0x36c>
 80496ff:	80 fa 09             	cmp    $0x9,%dl
 8049702:	0f 85 c5 03 00 00    	jne    8049acd <submitr+0x731>
 8049708:	83 ec 0c             	sub    $0xc,%esp
 804970b:	0f b6 d2             	movzbl %dl,%edx
 804970e:	52                   	push   %edx
 804970f:	68 74 a3 04 08       	push   $0x804a374
 8049714:	6a 08                	push   $0x8
 8049716:	6a 01                	push   $0x1
 8049718:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 804971f:	50                   	push   %eax
 8049720:	e8 9b f1 ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049725:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 804972c:	00 
 804972d:	88 07                	mov    %al,(%edi)
 804972f:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049736:	00 
 8049737:	88 47 01             	mov    %al,0x1(%edi)
 804973a:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049741:	00 
 8049742:	88 47 02             	mov    %al,0x2(%edi)
 8049745:	83 c4 20             	add    $0x20,%esp
 8049748:	8d 7f 03             	lea    0x3(%edi),%edi
 804974b:	e9 65 ff ff ff       	jmp    80496b5 <submitr+0x319>
 8049750:	c6 07 2b             	movb   $0x2b,(%edi)
 8049753:	8d 7f 01             	lea    0x1(%edi),%edi
 8049756:	e9 5a ff ff ff       	jmp    80496b5 <submitr+0x319>
 804975b:	01 c6                	add    %eax,%esi
 804975d:	29 c3                	sub    %eax,%ebx
 804975f:	74 24                	je     8049785 <submitr+0x3e9>
 8049761:	83 ec 04             	sub    $0x4,%esp
 8049764:	53                   	push   %ebx
 8049765:	56                   	push   %esi
 8049766:	55                   	push   %ebp
 8049767:	e8 94 f0 ff ff       	call   8048800 <write@plt>
 804976c:	83 c4 10             	add    $0x10,%esp
 804976f:	85 c0                	test   %eax,%eax
 8049771:	7f e8                	jg     804975b <submitr+0x3bf>
 8049773:	e8 b8 f0 ff ff       	call   8048830 <__errno_location@plt>
 8049778:	83 38 04             	cmpl   $0x4,(%eax)
 804977b:	0f 85 b0 00 00 00    	jne    8049831 <submitr+0x495>
 8049781:	89 f8                	mov    %edi,%eax
 8049783:	eb d6                	jmp    804975b <submitr+0x3bf>
 8049785:	83 7c 24 08 00       	cmpl   $0x0,0x8(%esp)
 804978a:	0f 88 a1 00 00 00    	js     8049831 <submitr+0x495>
 8049790:	89 6c 24 40          	mov    %ebp,0x40(%esp)
 8049794:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 804979b:	00 
 804979c:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 80497a0:	89 44 24 48          	mov    %eax,0x48(%esp)
 80497a4:	b9 00 20 00 00       	mov    $0x2000,%ecx
 80497a9:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 80497b0:	8d 44 24 40          	lea    0x40(%esp),%eax
 80497b4:	e8 32 fb ff ff       	call   80492eb <rio_readlineb>
 80497b9:	85 c0                	test   %eax,%eax
 80497bb:	0f 8e d6 00 00 00    	jle    8049897 <submitr+0x4fb>
 80497c1:	83 ec 0c             	sub    $0xc,%esp
 80497c4:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 80497cb:	50                   	push   %eax
 80497cc:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 80497d0:	50                   	push   %eax
 80497d1:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 80497d8:	50                   	push   %eax
 80497d9:	68 7b a3 04 08       	push   $0x804a37b
 80497de:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 80497e5:	50                   	push   %eax
 80497e6:	e8 25 f0 ff ff       	call   8048810 <__isoc99_sscanf@plt>
 80497eb:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 80497ef:	83 c4 20             	add    $0x20,%esp
 80497f2:	3d c8 00 00 00       	cmp    $0xc8,%eax
 80497f7:	0f 84 a6 01 00 00    	je     80499a3 <submitr+0x607>
 80497fd:	83 ec 08             	sub    $0x8,%esp
 8049800:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049807:	52                   	push   %edx
 8049808:	50                   	push   %eax
 8049809:	68 8c a2 04 08       	push   $0x804a28c
 804980e:	6a ff                	push   $0xffffffff
 8049810:	6a 01                	push   $0x1
 8049812:	ff 74 24 30          	pushl  0x30(%esp)
 8049816:	e8 a5 f0 ff ff       	call   80488c0 <__sprintf_chk@plt>
 804981b:	83 c4 14             	add    $0x14,%esp
 804981e:	55                   	push   %ebp
 804981f:	e8 7c f0 ff ff       	call   80488a0 <close@plt>
 8049824:	83 c4 10             	add    $0x10,%esp
 8049827:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804982c:	e9 02 02 00 00       	jmp    8049a33 <submitr+0x697>
 8049831:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049835:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804983b:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049842:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049849:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049850:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049857:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804985e:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049865:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 804986c:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049873:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 804987a:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049881:	83 ec 0c             	sub    $0xc,%esp
 8049884:	55                   	push   %ebp
 8049885:	e8 16 f0 ff ff       	call   80488a0 <close@plt>
 804988a:	83 c4 10             	add    $0x10,%esp
 804988d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049892:	e9 9c 01 00 00       	jmp    8049a33 <submitr+0x697>
 8049897:	8b 44 24 14          	mov    0x14(%esp),%eax
 804989b:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80498a1:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 80498a8:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 80498af:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 80498b6:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 80498bd:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80498c4:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 80498cb:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 80498d2:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 80498d9:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 80498e0:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 80498e7:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 80498ee:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 80498f5:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 80498fb:	83 ec 0c             	sub    $0xc,%esp
 80498fe:	55                   	push   %ebp
 80498ff:	e8 9c ef ff ff       	call   80488a0 <close@plt>
 8049904:	83 c4 10             	add    $0x10,%esp
 8049907:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804990c:	e9 22 01 00 00       	jmp    8049a33 <submitr+0x697>
 8049911:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049915:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804991b:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049922:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049929:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049930:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049937:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 804993e:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049945:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 804994c:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049953:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 804995a:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049961:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049968:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 804996c:	83 ec 0c             	sub    $0xc,%esp
 804996f:	55                   	push   %ebp
 8049970:	e8 2b ef ff ff       	call   80488a0 <close@plt>
 8049975:	83 c4 10             	add    $0x10,%esp
 8049978:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804997d:	e9 b1 00 00 00       	jmp    8049a33 <submitr+0x697>
 8049982:	85 c0                	test   %eax,%eax
 8049984:	74 4b                	je     80499d1 <submitr+0x635>
 8049986:	b9 00 20 00 00       	mov    $0x2000,%ecx
 804998b:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049992:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049996:	e8 50 f9 ff ff       	call   80492eb <rio_readlineb>
 804999b:	85 c0                	test   %eax,%eax
 804999d:	0f 8e 6e ff ff ff    	jle    8049911 <submitr+0x575>
 80499a3:	0f b6 94 24 4c 20 00 	movzbl 0x204c(%esp),%edx
 80499aa:	00 
 80499ab:	b8 0d 00 00 00       	mov    $0xd,%eax
 80499b0:	29 d0                	sub    %edx,%eax
 80499b2:	75 ce                	jne    8049982 <submitr+0x5e6>
 80499b4:	0f b6 94 24 4d 20 00 	movzbl 0x204d(%esp),%edx
 80499bb:	00 
 80499bc:	b8 0a 00 00 00       	mov    $0xa,%eax
 80499c1:	29 d0                	sub    %edx,%eax
 80499c3:	75 bd                	jne    8049982 <submitr+0x5e6>
 80499c5:	0f b6 84 24 4e 20 00 	movzbl 0x204e(%esp),%eax
 80499cc:	00 
 80499cd:	f7 d8                	neg    %eax
 80499cf:	eb b1                	jmp    8049982 <submitr+0x5e6>
 80499d1:	b9 00 20 00 00       	mov    $0x2000,%ecx
 80499d6:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 80499dd:	8d 44 24 40          	lea    0x40(%esp),%eax
 80499e1:	e8 05 f9 ff ff       	call   80492eb <rio_readlineb>
 80499e6:	85 c0                	test   %eax,%eax
 80499e8:	7e 68                	jle    8049a52 <submitr+0x6b6>
 80499ea:	83 ec 08             	sub    $0x8,%esp
 80499ed:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 80499f4:	50                   	push   %eax
 80499f5:	8b 7c 24 20          	mov    0x20(%esp),%edi
 80499f9:	57                   	push   %edi
 80499fa:	e8 a1 ed ff ff       	call   80487a0 <strcpy@plt>
 80499ff:	89 2c 24             	mov    %ebp,(%esp)
 8049a02:	e8 99 ee ff ff       	call   80488a0 <close@plt>
 8049a07:	0f b6 17             	movzbl (%edi),%edx
 8049a0a:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049a0f:	83 c4 10             	add    $0x10,%esp
 8049a12:	29 d0                	sub    %edx,%eax
 8049a14:	75 13                	jne    8049a29 <submitr+0x68d>
 8049a16:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049a1a:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049a1f:	29 d0                	sub    %edx,%eax
 8049a21:	75 06                	jne    8049a29 <submitr+0x68d>
 8049a23:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049a27:	f7 d8                	neg    %eax
 8049a29:	85 c0                	test   %eax,%eax
 8049a2b:	0f 95 c0             	setne  %al
 8049a2e:	0f b6 c0             	movzbl %al,%eax
 8049a31:	f7 d8                	neg    %eax
 8049a33:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049a3a:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049a41:	0f 85 2a 01 00 00    	jne    8049b71 <submitr+0x7d5>
 8049a47:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049a4d:	5b                   	pop    %ebx
 8049a4e:	5e                   	pop    %esi
 8049a4f:	5f                   	pop    %edi
 8049a50:	5d                   	pop    %ebp
 8049a51:	c3                   	ret    
 8049a52:	8b 44 24 14          	mov    0x14(%esp),%eax
 8049a56:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049a5c:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049a63:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049a6a:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049a71:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049a78:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049a7f:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049a86:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049a8d:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049a94:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049a9b:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049aa2:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049aa9:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049ab0:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049ab7:	83 ec 0c             	sub    $0xc,%esp
 8049aba:	55                   	push   %ebp
 8049abb:	e8 e0 ed ff ff       	call   80488a0 <close@plt>
 8049ac0:	83 c4 10             	add    $0x10,%esp
 8049ac3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ac8:	e9 66 ff ff ff       	jmp    8049a33 <submitr+0x697>
 8049acd:	a1 bc a2 04 08       	mov    0x804a2bc,%eax
 8049ad2:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8049ad6:	89 03                	mov    %eax,(%ebx)
 8049ad8:	a1 fb a2 04 08       	mov    0x804a2fb,%eax
 8049add:	89 43 3f             	mov    %eax,0x3f(%ebx)
 8049ae0:	8d 7b 04             	lea    0x4(%ebx),%edi
 8049ae3:	83 e7 fc             	and    $0xfffffffc,%edi
 8049ae6:	29 fb                	sub    %edi,%ebx
 8049ae8:	89 d8                	mov    %ebx,%eax
 8049aea:	be bc a2 04 08       	mov    $0x804a2bc,%esi
 8049aef:	29 de                	sub    %ebx,%esi
 8049af1:	83 c0 43             	add    $0x43,%eax
 8049af4:	c1 e8 02             	shr    $0x2,%eax
 8049af7:	89 c1                	mov    %eax,%ecx
 8049af9:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049afb:	83 ec 0c             	sub    $0xc,%esp
 8049afe:	55                   	push   %ebp
 8049aff:	e8 9c ed ff ff       	call   80488a0 <close@plt>
 8049b04:	83 c4 10             	add    $0x10,%esp
 8049b07:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b0c:	e9 22 ff ff ff       	jmp    8049a33 <submitr+0x697>
 8049b11:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049b18:	50                   	push   %eax
 8049b19:	ff 74 24 14          	pushl  0x14(%esp)
 8049b1d:	ff 74 24 14          	pushl  0x14(%esp)
 8049b21:	ff 74 24 14          	pushl  0x14(%esp)
 8049b25:	68 00 a3 04 08       	push   $0x804a300
 8049b2a:	68 00 20 00 00       	push   $0x2000
 8049b2f:	6a 01                	push   $0x1
 8049b31:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049b38:	57                   	push   %edi
 8049b39:	e8 82 ed ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049b3e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b43:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049b48:	f2 ae                	repnz scas %es:(%edi),%al
 8049b4a:	f7 d1                	not    %ecx
 8049b4c:	8d 41 ff             	lea    -0x1(%ecx),%eax
 8049b4f:	89 44 24 28          	mov    %eax,0x28(%esp)
 8049b53:	83 c4 20             	add    $0x20,%esp
 8049b56:	89 c3                	mov    %eax,%ebx
 8049b58:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049b5f:	bf 00 00 00 00       	mov    $0x0,%edi
 8049b64:	85 c0                	test   %eax,%eax
 8049b66:	0f 85 f5 fb ff ff    	jne    8049761 <submitr+0x3c5>
 8049b6c:	e9 1f fc ff ff       	jmp    8049790 <submitr+0x3f4>
 8049b71:	e8 1a ec ff ff       	call   8048790 <__stack_chk_fail@plt>

08049b76 <init_timeout>:
 8049b76:	53                   	push   %ebx
 8049b77:	83 ec 08             	sub    $0x8,%esp
 8049b7a:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049b7e:	85 db                	test   %ebx,%ebx
 8049b80:	74 24                	je     8049ba6 <init_timeout+0x30>
 8049b82:	83 ec 08             	sub    $0x8,%esp
 8049b85:	68 c8 92 04 08       	push   $0x80492c8
 8049b8a:	6a 0e                	push   $0xe
 8049b8c:	e8 cf eb ff ff       	call   8048760 <signal@plt>
 8049b91:	85 db                	test   %ebx,%ebx
 8049b93:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b98:	0f 48 d8             	cmovs  %eax,%ebx
 8049b9b:	89 1c 24             	mov    %ebx,(%esp)
 8049b9e:	e8 dd eb ff ff       	call   8048780 <alarm@plt>
 8049ba3:	83 c4 10             	add    $0x10,%esp
 8049ba6:	83 c4 08             	add    $0x8,%esp
 8049ba9:	5b                   	pop    %ebx
 8049baa:	c3                   	ret    

08049bab <init_driver>:
 8049bab:	57                   	push   %edi
 8049bac:	56                   	push   %esi
 8049bad:	53                   	push   %ebx
 8049bae:	83 ec 28             	sub    $0x28,%esp
 8049bb1:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049bb5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049bbb:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049bbf:	31 c0                	xor    %eax,%eax
 8049bc1:	6a 01                	push   $0x1
 8049bc3:	6a 0d                	push   $0xd
 8049bc5:	e8 96 eb ff ff       	call   8048760 <signal@plt>
 8049bca:	83 c4 08             	add    $0x8,%esp
 8049bcd:	6a 01                	push   $0x1
 8049bcf:	6a 1d                	push   $0x1d
 8049bd1:	e8 8a eb ff ff       	call   8048760 <signal@plt>
 8049bd6:	83 c4 08             	add    $0x8,%esp
 8049bd9:	6a 01                	push   $0x1
 8049bdb:	6a 1d                	push   $0x1d
 8049bdd:	e8 7e eb ff ff       	call   8048760 <signal@plt>
 8049be2:	83 c4 0c             	add    $0xc,%esp
 8049be5:	6a 00                	push   $0x0
 8049be7:	6a 01                	push   $0x1
 8049be9:	6a 02                	push   $0x2
 8049beb:	e8 60 ec ff ff       	call   8048850 <socket@plt>
 8049bf0:	83 c4 10             	add    $0x10,%esp
 8049bf3:	85 c0                	test   %eax,%eax
 8049bf5:	0f 88 a9 00 00 00    	js     8049ca4 <init_driver+0xf9>
 8049bfb:	89 c3                	mov    %eax,%ebx
 8049bfd:	83 ec 0c             	sub    $0xc,%esp
 8049c00:	68 8c a3 04 08       	push   $0x804a38c
 8049c05:	e8 66 ec ff ff       	call   8048870 <gethostbyname@plt>
 8049c0a:	83 c4 10             	add    $0x10,%esp
 8049c0d:	85 c0                	test   %eax,%eax
 8049c0f:	0f 84 da 00 00 00    	je     8049cef <init_driver+0x144>
 8049c15:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 8049c19:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049c20:	00 
 8049c21:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049c28:	00 
 8049c29:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049c30:	00 
 8049c31:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049c38:	00 
 8049c39:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 8049c40:	6a 0c                	push   $0xc
 8049c42:	ff 70 0c             	pushl  0xc(%eax)
 8049c45:	8b 40 10             	mov    0x10(%eax),%eax
 8049c48:	ff 30                	pushl  (%eax)
 8049c4a:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049c4e:	50                   	push   %eax
 8049c4f:	e8 7c eb ff ff       	call   80487d0 <__memmove_chk@plt>
 8049c54:	66 c7 44 24 1e 3b 6e 	movw   $0x6e3b,0x1e(%esp)
 8049c5b:	83 c4 0c             	add    $0xc,%esp
 8049c5e:	6a 10                	push   $0x10
 8049c60:	57                   	push   %edi
 8049c61:	53                   	push   %ebx
 8049c62:	e8 29 ec ff ff       	call   8048890 <connect@plt>
 8049c67:	83 c4 10             	add    $0x10,%esp
 8049c6a:	85 c0                	test   %eax,%eax
 8049c6c:	0f 88 e9 00 00 00    	js     8049d5b <init_driver+0x1b0>
 8049c72:	83 ec 0c             	sub    $0xc,%esp
 8049c75:	53                   	push   %ebx
 8049c76:	e8 25 ec ff ff       	call   80488a0 <close@plt>
 8049c7b:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 8049c80:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 8049c84:	83 c4 10             	add    $0x10,%esp
 8049c87:	b8 00 00 00 00       	mov    $0x0,%eax
 8049c8c:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8049c90:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8049c97:	0f 85 eb 00 00 00    	jne    8049d88 <init_driver+0x1dd>
 8049c9d:	83 c4 20             	add    $0x20,%esp
 8049ca0:	5b                   	pop    %ebx
 8049ca1:	5e                   	pop    %esi
 8049ca2:	5f                   	pop    %edi
 8049ca3:	c3                   	ret    
 8049ca4:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049caa:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049cb1:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049cb8:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049cbf:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049cc6:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049ccd:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049cd4:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049cdb:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049ce2:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049ce8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049ced:	eb 9d                	jmp    8049c8c <init_driver+0xe1>
 8049cef:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049cf5:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049cfc:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049d03:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049d0a:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049d11:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049d18:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049d1f:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049d26:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049d2d:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049d34:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 8049d3b:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 8049d41:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 8049d45:	83 ec 0c             	sub    $0xc,%esp
 8049d48:	53                   	push   %ebx
 8049d49:	e8 52 eb ff ff       	call   80488a0 <close@plt>
 8049d4e:	83 c4 10             	add    $0x10,%esp
 8049d51:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d56:	e9 31 ff ff ff       	jmp    8049c8c <init_driver+0xe1>
 8049d5b:	83 ec 0c             	sub    $0xc,%esp
 8049d5e:	68 8c a3 04 08       	push   $0x804a38c
 8049d63:	68 4c a3 04 08       	push   $0x804a34c
 8049d68:	6a ff                	push   $0xffffffff
 8049d6a:	6a 01                	push   $0x1
 8049d6c:	56                   	push   %esi
 8049d6d:	e8 4e eb ff ff       	call   80488c0 <__sprintf_chk@plt>
 8049d72:	83 c4 14             	add    $0x14,%esp
 8049d75:	53                   	push   %ebx
 8049d76:	e8 25 eb ff ff       	call   80488a0 <close@plt>
 8049d7b:	83 c4 10             	add    $0x10,%esp
 8049d7e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d83:	e9 04 ff ff ff       	jmp    8049c8c <init_driver+0xe1>
 8049d88:	e8 03 ea ff ff       	call   8048790 <__stack_chk_fail@plt>

08049d8d <driver_post>:
 8049d8d:	53                   	push   %ebx
 8049d8e:	83 ec 08             	sub    $0x8,%esp
 8049d91:	8b 54 24 10          	mov    0x10(%esp),%edx
 8049d95:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049d99:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 8049d9d:	85 c0                	test   %eax,%eax
 8049d9f:	75 17                	jne    8049db8 <driver_post+0x2b>
 8049da1:	85 d2                	test   %edx,%edx
 8049da3:	74 05                	je     8049daa <driver_post+0x1d>
 8049da5:	80 3a 00             	cmpb   $0x0,(%edx)
 8049da8:	75 34                	jne    8049dde <driver_post+0x51>
 8049daa:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049daf:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049db3:	83 c4 08             	add    $0x8,%esp
 8049db6:	5b                   	pop    %ebx
 8049db7:	c3                   	ret    
 8049db8:	83 ec 04             	sub    $0x4,%esp
 8049dbb:	ff 74 24 18          	pushl  0x18(%esp)
 8049dbf:	68 9a a3 04 08       	push   $0x804a39a
 8049dc4:	6a 01                	push   $0x1
 8049dc6:	e8 75 ea ff ff       	call   8048840 <__printf_chk@plt>
 8049dcb:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 8049dd0:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 8049dd4:	83 c4 10             	add    $0x10,%esp
 8049dd7:	b8 00 00 00 00       	mov    $0x0,%eax
 8049ddc:	eb d5                	jmp    8049db3 <driver_post+0x26>
 8049dde:	83 ec 04             	sub    $0x4,%esp
 8049de1:	53                   	push   %ebx
 8049de2:	ff 74 24 1c          	pushl  0x1c(%esp)
 8049de6:	68 b1 a3 04 08       	push   $0x804a3b1
 8049deb:	52                   	push   %edx
 8049dec:	68 b9 a3 04 08       	push   $0x804a3b9
 8049df1:	68 6e 3b 00 00       	push   $0x3b6e
 8049df6:	68 8c a3 04 08       	push   $0x804a38c
 8049dfb:	e8 9c f5 ff ff       	call   804939c <submitr>
 8049e00:	83 c4 20             	add    $0x20,%esp
 8049e03:	eb ae                	jmp    8049db3 <driver_post+0x26>
 8049e05:	66 90                	xchg   %ax,%ax
 8049e07:	66 90                	xchg   %ax,%ax
 8049e09:	66 90                	xchg   %ax,%ax
 8049e0b:	66 90                	xchg   %ax,%ax
 8049e0d:	66 90                	xchg   %ax,%ax
 8049e0f:	90                   	nop

08049e10 <__libc_csu_init>:
 8049e10:	55                   	push   %ebp
 8049e11:	57                   	push   %edi
 8049e12:	56                   	push   %esi
 8049e13:	53                   	push   %ebx
 8049e14:	e8 f7 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e19:	81 c3 e7 21 00 00    	add    $0x21e7,%ebx
 8049e1f:	83 ec 0c             	sub    $0xc,%esp
 8049e22:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8049e26:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 8049e2c:	e8 c3 e8 ff ff       	call   80486f4 <_init>
 8049e31:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8049e37:	29 c6                	sub    %eax,%esi
 8049e39:	c1 fe 02             	sar    $0x2,%esi
 8049e3c:	85 f6                	test   %esi,%esi
 8049e3e:	74 25                	je     8049e65 <__libc_csu_init+0x55>
 8049e40:	31 ff                	xor    %edi,%edi
 8049e42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049e48:	83 ec 04             	sub    $0x4,%esp
 8049e4b:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e4f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8049e53:	55                   	push   %ebp
 8049e54:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8049e5b:	83 c7 01             	add    $0x1,%edi
 8049e5e:	83 c4 10             	add    $0x10,%esp
 8049e61:	39 fe                	cmp    %edi,%esi
 8049e63:	75 e3                	jne    8049e48 <__libc_csu_init+0x38>
 8049e65:	83 c4 0c             	add    $0xc,%esp
 8049e68:	5b                   	pop    %ebx
 8049e69:	5e                   	pop    %esi
 8049e6a:	5f                   	pop    %edi
 8049e6b:	5d                   	pop    %ebp
 8049e6c:	c3                   	ret    
 8049e6d:	8d 76 00             	lea    0x0(%esi),%esi

08049e70 <__libc_csu_fini>:
 8049e70:	f3 c3                	repz ret 

Disassembly of section .fini:

08049e74 <_fini>:
 8049e74:	53                   	push   %ebx
 8049e75:	83 ec 08             	sub    $0x8,%esp
 8049e78:	e8 93 ea ff ff       	call   8048910 <__x86.get_pc_thunk.bx>
 8049e7d:	81 c3 83 21 00 00    	add    $0x2183,%ebx
 8049e83:	83 c4 08             	add    $0x8,%esp
 8049e86:	5b                   	pop    %ebx
 8049e87:	c3                   	ret    
